{"version":3,"sources":["hooks/http.hook.js","actions/index.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","reducers/heroes.js","reducers/filters.js","store/index.js","index.js"],"names":["useHttp","request","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","concat","status","json","e","heroesFetching","type","heroesFetched","heroes","payload","heroesFetchingError","filtersFetching","filtersFetched","filters","filtersFetchingError","HeroesListItem","_ref","elementClassName","name","description","element","onDelete","_jsxs","className","children","_jsx","src","alt","style","objectFit","onClick","Spinner","role","HeroesList","filteredHeroesSelector","createSelector","state","activeFilter","filter","item","filteredHeroes","useSelector","heroesLoadingStatus","dispatch","useDispatch","useEffect","then","data","catch","fetchHeroes","id","console","log","heroDeleted","err","elements","arr","CSSTransition","timeout","classNames","map","props","TransitionGroup","component","HeroesAddForm","heroName","setHeroName","useState","heroDescr","setHeroDescr","heroElement","setHeroElement","filtersLoadingStatus","onSubmit","preventDefault","newHero","uuidv4","hero","JSON","stringify","res","htmlFor","required","placeholder","value","onChange","target","height","renderFilters","label","HeroesFilters","fetchFilters","btnClass","active","App","initialState","action","stringMiddleware","next","store","configureStore","reducer","middleware","getDefaultMiddleware","devTools","process","ReactDOM","render","React","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.0121e782.chunk.js","sourcesContent":["import { useCallback } from \"react\";\n\nexport const useHttp = () => {\n  // const [process, setProcess] = useState('waiting');\n\n  const request = useCallback(\n    async (url, method = \"GET\", body = null, headers = { \"Content-Type\": \"application/json\" }) => {\n      // setProcess('loading');\n\n      try {\n        const response = await fetch(url, { method, body, headers });\n\n        if (!response.ok) {\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n        }\n\n        const data = await response.json();\n\n        return data;\n      } catch (e) {\n        // setProcess('error');\n        throw e;\n      }\n    },\n    []\n  );\n\n  // const clearError = useCallback(() => {\n  // setProcess('loading');\n  // }, []);\n\n  return {\n    request,\n    // clearError,\n    // process,\n    // setProcess\n  };\n};\n","// import { request } from \"http\";\n\nexport const fetchHeroes = (request) => (dispatch) => {\n  dispatch(heroesFetching());\n  request(\"http://localhost:3001/heroes\")\n    .then((data) => dispatch(heroesFetched(data)))\n    .catch(() => dispatch(heroesFetchingError()));\n};\n\nexport const fetchFilters = (request) => (dispatch) => {\n  dispatch(filtersFetching());\n  request(\"http://localhost:3001/filters\")\n    .then((data) => dispatch(filtersFetched(data)))\n    .catch(() => dispatch(filtersFetchingError()));\n};\n\nexport const heroesFetching = () => {\n  return {\n    type: \"HEROES_FETCHING\",\n  };\n};\n\nexport const heroesFetched = (heroes) => {\n  return {\n    type: \"HEROES_FETCHED\",\n    payload: heroes,\n  };\n};\n\nexport const heroesFetchingError = () => {\n  return {\n    type: \"HEROES_FETCHING_ERROR\",\n  };\n};\n\nexport const filtersFetching = () => {\n  return {\n    type: \"FILTERS_FETCHING\",\n  };\n};\n\nexport const filtersFetched = (filters) => {\n  return {\n    type: \"FILTERS_FETCHED\",\n    payload: filters,\n  };\n};\n\nexport const filtersFetchingError = () => {\n  return {\n    type: \"FILTERS_FETCHING_ERROR\",\n  };\n};\n\nexport const activeFilterChanged = (filter) => {\n  return {\n    type: \"ACTIVE_FILTER_CHANGED\",\n    payload: filter,\n  };\n};\n\n// export const activeFilterChanged = (filter) => (dispatch) => {\n//   setTimeout(() => {\n//     dispatch({\n//       type: \"ACTIVE_FILTER_CHANGED\",\n//       payload: filter,\n//     });\n//   }, 1000);\n// };\n\nexport const heroCreated = (hero) => {\n  return {\n    type: \"HERO_CREATED\",\n    payload: hero,\n  };\n};\n\nexport const heroDeleted = (id) => {\n  return {\n    type: \"HERO_DELETED\",\n    payload: id,\n  };\n};\n","const HeroesListItem = ({ name, description, element, onDelete }) => {\n  let elementClassName;\n\n  switch (element) {\n    case \"fire\":\n      elementClassName = \"bg-danger bg-gradient\";\n      break;\n    case \"water\":\n      elementClassName = \"bg-primary bg-gradient\";\n      break;\n    case \"wind\":\n      elementClassName = \"bg-success bg-gradient\";\n      break;\n    case \"earth\":\n      elementClassName = \"bg-secondary bg-gradient\";\n      break;\n    default:\n      elementClassName = \"bg-warning bg-gradient\";\n  }\n\n  return (\n    <li className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}>\n      <img\n        src=\"https://em-content.zobj.net/source/joypixels/369/person-facepalming_1f926.png\"\n        className=\"img-fluid w-25 d-inline\"\n        alt=\"unknown hero\"\n        style={{ objectFit: \"cover\" }}\n      />\n      <div className=\"card-body\">\n        <h3 className=\"card-title\">{name}</h3>\n        <p className=\"card-text\">{description}</p>\n      </div>\n      <span\n        onClick={onDelete}\n        className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\"\n      >\n        <button type=\"button\" className=\"btn-close btn-close\" aria-label=\"Close\"></button>\n      </span>\n    </li>\n  );\n};\n\nexport default HeroesListItem;\n","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import { useHttp } from \"../../hooks/http.hook\";\nimport { useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { createSelector } from \"reselect\";\n\nimport { fetchHeroes, heroDeleted } from \"../../actions\";\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from \"../spinner/Spinner\";\n\nimport \"./heroesList.scss\";\n\nconst HeroesList = () => {\n  const filteredHeroesSelector = createSelector(\n    (state) => state.filters.activeFilter,\n    (state) => state.heroes.heroes,\n    (filter, heroes) => {\n      if (filter === \"all\") {\n        return heroes;\n      } else {\n        return heroes.filter((item) => item.element === filter);\n      }\n    }\n  );\n\n  const filteredHeroes = useSelector(filteredHeroesSelector);\n  const heroesLoadingStatus = useSelector((state) => state.heroes.heroesLoadingStatus);\n  const dispatch = useDispatch();\n  const { request } = useHttp();\n\n  useEffect(() => {\n    dispatch(fetchHeroes(request));\n    // eslint-disable-next-line\n  }, []);\n\n  const onDelete = useCallback(\n    (id) => {\n      request(`http://localhost:3001/heroes/${id}`, \"DELETE\")\n        .then((data) => console.log(data, \"Deleted\"))\n        .then(dispatch(heroDeleted(id)))\n        .catch((err) => console.log(err));\n      // eslint-disable-next-line\n    },\n    [request]\n  );\n\n  if (heroesLoadingStatus === \"loading\") {\n    return <Spinner />;\n  } else if (heroesLoadingStatus === \"error\") {\n    return <h5 className=\"text-center mt-5\">Loading error</h5>;\n  }\n\n  const renderHeroesList = (arr) => {\n    if (arr.length === 0) {\n      return (\n        <CSSTransition timeout={0} classNames=\"hero\">\n          <h5 className=\"text-center mt-5\">There are no heroes yet</h5>\n        </CSSTransition>\n      );\n    }\n\n    return arr.map(({ id, ...props }) => {\n      return (\n        <CSSTransition key={id} timeout={500} classNames=\"hero\">\n          <HeroesListItem {...props} onDelete={() => onDelete(id)} />\n        </CSSTransition>\n      );\n    });\n  };\n\n  const elements = renderHeroesList(filteredHeroes);\n  return <TransitionGroup component=\"ul\">{elements}</TransitionGroup>;\n};\n\nexport default HeroesList;\n","// Задача для этого компонента:\n// Реализовать создание нового героя с введенными данными. Он должен попадать\n// в общее состояние и отображаться в списке + фильтроваться\n// Уникальный идентификатор персонажа можно сгенерировать через uiid\n// Усложненная задача:\n// Персонаж создается и в файле json при помощи метода POST\n// Дополнительно:\n// Элементы <option></option> желательно сформировать на базе\n// данных из фильтров\n\nimport { useHttp } from \"../../hooks/http.hook\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { heroCreated } from \"../../actions\";\n\nconst HeroesAddForm = () => {\n  // Состояния для контроля формы\n  const [heroName, setHeroName] = useState(\"\");\n  const [heroDescr, setHeroDescr] = useState(\"\");\n  const [heroElement, setHeroElement] = useState(\"\");\n\n  const { filters, filtersLoadingStatus } = useSelector((state) => state.filters);\n  const dispatch = useDispatch();\n  const { request } = useHttp();\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    // Можно сделать и одинаковые названия состояний,\n    // хотел показать вам чуть нагляднее\n    // Генерация id через библиотеку\n    const newHero = {\n      id: uuidv4(),\n      name: heroName,\n      description: heroDescr,\n      element: heroElement,\n    };\n\n    // Отправляем данные на сервер в формате JSON\n    // ТОЛЬКО если запрос успешен - отправляем персонажа в store\n    request(\"http://localhost:3001/heroes\", \"POST\", JSON.stringify(newHero))\n      .then((res) => console.log(res, \"Sending is successful\"))\n      .then(dispatch(heroCreated(newHero)))\n      .catch((err) => console.log(err));\n\n    // Очищаем форму после отправки\n    setHeroName(\"\");\n    setHeroDescr(\"\");\n    setHeroElement(\"\");\n  };\n\n  const renderFilters = (filters, status) => {\n    if (status === \"loading\") {\n      return <option>Loading elements</option>;\n    } else if (status === \"error\") {\n      return <option>Loading error</option>;\n    }\n\n    // Если фильтры есть, то рендерим их\n    if (filters && filters.length > 0) {\n      return filters.map(({ name, label }) => {\n        // Один из фильтров нам тут не нужен\n        // eslint-disable-next-line\n        if (name === \"all\") return;\n\n        return (\n          <option key={name} value={name}>\n            {label}\n          </option>\n        );\n      });\n    }\n  };\n\n  return (\n    <form className=\"border p-4 shadow-lg rounded\" onSubmit={onSubmitHandler}>\n      <div className=\"mb-3\">\n        <label htmlFor=\"name\" className=\"form-label fs-4\">\n          The name of the new hero\n        </label>\n        <input\n          required\n          type=\"text\"\n          name=\"name\"\n          className=\"form-control\"\n          id=\"name\"\n          placeholder=\"What's my name?\"\n          value={heroName}\n          onChange={(e) => setHeroName(e.target.value)}\n        />\n      </div>\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"text\" className=\"form-label fs-4\">\n          Description\n        </label>\n        <textarea\n          required\n          name=\"text\"\n          className=\"form-control\"\n          id=\"text\"\n          placeholder=\"What I can do?\"\n          style={{ height: \"130px\" }}\n          value={heroDescr}\n          onChange={(e) => setHeroDescr(e.target.value)}\n        />\n      </div>\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"element\" className=\"form-label\">\n          Choose a hero element\n        </label>\n        <select\n          required\n          className=\"form-select\"\n          id=\"element\"\n          name=\"element\"\n          value={heroElement}\n          onChange={(e) => setHeroElement(e.target.value)}\n        >\n          <option value=\"\">I own an element...</option>\n          {renderFilters(filters, filtersLoadingStatus)}\n        </select>\n      </div>\n\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Create\n      </button>\n    </form>\n  );\n};\n\nexport default HeroesAddForm;\n","import { useHttp } from \"../../hooks/http.hook\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport classNames from \"classnames\";\n\nimport { fetchFilters, activeFilterChanged } from \"../../actions\";\nimport Spinner from \"../spinner/Spinner\";\n\nconst HeroesFilters = () => {\n  const { filters, filtersLoadingStatus, activeFilter } = useSelector((state) => state.filters);\n  const dispatch = useDispatch();\n  const { request } = useHttp();\n\n  useEffect(() => {\n    dispatch(fetchFilters(request));\n\n    // eslint-disable-next-line\n  }, []);\n\n  if (filtersLoadingStatus === \"loading\") {\n    return <Spinner />;\n  } else if (filtersLoadingStatus === \"error\") {\n    return <h5 className=\"text-center mt-5\">Loading error</h5>;\n  }\n\n  const renderFilters = (arr) => {\n    if (arr.length === 0) {\n      return <h5 className=\"text-center mt-5\">No filters found</h5>;\n    }\n\n    // Данные в json-файле я расширил классами и текстом\n    return arr.map(({ name, className, label }) => {\n      // Используем библиотеку classnames и формируем классы динамически\n      const btnClass = classNames(\"btn\", className, {\n        active: name === activeFilter,\n      });\n\n      return (\n        <button key={name} id={name} className={btnClass} onClick={() => dispatch(activeFilterChanged(name))}>\n          {label}\n        </button>\n      );\n    });\n  };\n\n  const elements = renderFilters(filters);\n\n  return (\n    <div className=\"card shadow-lg mt-4\">\n      <div className=\"card-body\">\n        <p className=\"card-text\">Filter heroes by elements</p>\n        <div className=\"btn-group\">{elements}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeroesFilters;\n","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","const initialState = {\n  heroes: [],\n  heroesLoadingStatus: \"idle\",\n};\n\nconst heroes = (state = initialState, action) => {\n  switch (action.type) {\n    case \"HEROES_FETCHING\":\n      return {\n        ...state,\n        heroesLoadingStatus: \"loading\",\n      };\n    case \"HEROES_FETCHED\":\n      return {\n        ...state,\n        heroes: action.payload,\n        heroesLoadingStatus: \"idle\",\n      };\n    case \"HEROES_FETCHING_ERROR\":\n      return {\n        ...state,\n        heroesLoadingStatus: \"error\",\n      };\n\n    case \"HERO_CREATED\":\n      return {\n        ...state,\n        heroes: [...state.heroes, action.payload],\n      };\n    case \"HERO_DELETED\":\n      return {\n        ...state,\n        heroes: state.heroes.filter((item) => item.id !== action.payload),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default heroes;\n","const initialState = {\n  filters: [],\n  filtersLoadingStatus: \"idle\",\n  activeFilter: \"all\",\n};\n\nconst filters = (state = initialState, action) => {\n  switch (action.type) {\n    case \"FILTERS_FETCHING\":\n      return {\n        ...state,\n        filtersLoadingStatus: \"loading\",\n      };\n    case \"FILTERS_FETCHED\":\n      return {\n        ...state,\n        filters: action.payload,\n        filtersLoadingStatus: \"idle\",\n      };\n    case \"FILTERS_FETCHING_ERROR\":\n      return {\n        ...state,\n        filtersLoadingStatus: \"error\",\n      };\n    case \"ACTIVE_FILTER_CHANGED\":\n      return {\n        ...state,\n        activeFilter: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filters;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport heroes from \"../reducers/heroes\";\nimport filters from \"../reducers/filters\";\n\nconst stringMiddleware = () => (next) => (action) => {\n  if (typeof action === \"string\") {\n    return next({\n      type: action,\n    });\n  }\n  return next(action);\n};\n\nconst store = configureStore({\n  reducer: { heroes, filters },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(stringMiddleware),\n  devTools: process.env.NODE_ENV !== \"production\",\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./components/app/App\";\nimport store from \"./store\";\n\nimport \"./styles/index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}